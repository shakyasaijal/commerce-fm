# Generated by Django 3.0 on 2020-10-11 12:08

import Products.models
import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Offer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('english_name', models.CharField(max_length=250, unique=True)),
                ('nepali_name', models.CharField(max_length=250, unique=True)),
                ('categoryImage', models.ImageField(upload_to=Products.models.category_image_name_change, verbose_name='Category Image')),
                ('isFeatured', models.BooleanField(choices=[(False, 'Not a featured.'), (True, 'Is featured.')], default=False, verbose_name='Is a featured product?')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('english_name', models.CharField(max_length=255)),
                ('nepali_name', models.CharField(blank=True, max_length=255, null=True)),
                ('old_price', models.FloatField(blank=True, max_length=255, null=True)),
                ('price', models.FloatField(max_length=255)),
                ('short_description', ckeditor.fields.RichTextField(blank=True, help_text='Not more than 30 words.', null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, help_text='Bio e.g. size, material type, etc', null=True)),
                ('quantity_left', models.BigIntegerField(blank=True, default=0, help_text='Automatic quantity decreased after order placed. Leave it empty for unlimited/manual quantity of the product.', null=True)),
                ('status', models.BooleanField(choices=[(True, 'In stock'), (False, 'Out of stock')], default=True, help_text='Status with Available are only visible in the site.')),
                ('is_featured', models.BooleanField(choices=[(False, 'Not a featured.'), (True, 'Is featured.')], default=False)),
                ('warranty', models.CharField(blank=True, help_text='eg: 1 year or 6 months', max_length=255)),
                ('main_image', models.ImageField(upload_to=Products.models.product_image_name_change)),
                ('soft_delete', models.BooleanField(choices=[(True, 'Soft Deleted'), (False, 'Not Deleted')], default=False)),
                ('brand_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand', to='Products.Brand')),
                ('category', models.ManyToManyField(blank=True, related_name='category_product', to='Products.Category')),
                ('offers', models.ManyToManyField(blank=True, related_name='offer_products', to='Offer.OfferCategory')),
                ('related_products', models.ManyToManyField(blank=True, related_name='_product_related_products_+', to='Products.Product')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('size', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to=Products.models.product_image_name_change)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='Products.Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='sizes',
            field=models.ManyToManyField(blank=True, to='Products.Size'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='product_tags', to='Products.Tags'),
        ),
    ]
